{
	"info": {
		"_postman_id": "81b82cc4-48a5-45f9-b2d5-65c92d564f2a",
		"name": "Postman2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});\r",
							"//или\r",
							"pm.test(\"Body is string\", function () {\r",
							"  pm.response.to.have.body(\"This is the first responce from server!\");\r",
							"});\r",
							" "
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Marina",
							"type": "text",
							"disabled": true
						},
						{
							"key": "age",
							"value": "31",
							"type": "text",
							"disabled": true
						},
						{
							"key": "salary",
							"value": "1000000",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/first?name=Marina&age=31&salary=1000000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					],
					"query": [
						{
							"key": "name",
							"value": "Marina"
						},
						{
							"key": "age",
							"value": "31"
						},
						{
							"key": "salary",
							"value": "1000000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3. Спарсить responce body в json\r",
							"pm.test(\"jsonBody, Responce is json\", function () {\r",
							"        pm.response.to.be.json;\r",
							"        pm.response.to.have.body();              \r",
							"        var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.name).to.eql('Marina');\r",
							"        pm.expect(jsonData.salary).to.eql(1000000);\r",
							"        pm.expect(jsonData.age).to.eql(\"31\");\r",
							"});\r",
							"\r",
							"//или по отдельности: \r",
							"//4. Проверить, что name в ответе равно name s request (name вбить руками)\r",
							"pm.test(\"Your name\", function () {\r",
							"       var jsonData = pm.response.json();\r",
							"       pm.expect(jsonData.name).to.eql(\"Marina\");\r",
							"});\r",
							"\r",
							"//5. Проверить, что age в ответе равно age s request (age вбить руками)\r",
							"pm.test(\"Your salary\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.salary).to.eql(1000000);\r",
							"});\r",
							"\r",
							"//6. Проверить, что salary в ответе равно salary s request (salary вбить руками)\r",
							"pm.test(\"Your age\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.age).to.eql(\"31\");\r",
							"});\r",
							"\r",
							"//7. Спарсить request\r",
							"pm.test(\"Request\", function () {\r",
							"    var req = request.data;\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(req.name).to.eql(jsonData.name);\r",
							"    pm.expect(jsonData.age).to.eql(req.age);\r",
							"    pm.expect(+req.salary).to.eql(jsonData.salary);\r",
							"});\r",
							"\r",
							"//или по отдельности:\r",
							"//8. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Name s request\", function () {\r",
							"    var req = request.data;\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(req.name).to.eql(jsonData.name);\r",
							"});\r",
							"\r",
							"//9. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"Age s request\", function () {\r",
							"    var req = request.data;\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(req.age).to.eql(jsonData.age);\r",
							"});\r",
							"\r",
							"//10. Проверить, что salary в ответе равно salary s request (salary забрать из request)\r",
							"pm.test(\"Salary s request\", function () {\r",
							"    var req = request.data;\r",
							"    console.log(parseInt('1000000'));\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(+req.salary).to.eql(jsonData.salary);\r",
							"});\r",
							"\r",
							"//11. Вывести в консоль параметр family из response\r",
							"pm.test (\"family\", function () {\r",
							"var parameter_family = pm.response.json();\r",
							"console.log(parameter_family.family);\r",
							"}); \r",
							"\r",
							"//12. Проверить, что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"pm.test(\"u_salary_1_5_year\", function () {\r",
							"    var req = request.data;\r",
							"    var jsonData = pm.response.json();\r",
							"pm.expect(+req.salary*4).to.eql(jsonData.family.u_salary_1_5_year);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Marina",
							"type": "text"
						},
						{
							"key": "age",
							"value": "31",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//2. Cтатус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3. Спарсить response body в json\r",
							"pm.test(\"jsonBody, Responce is json\", function () {\r",
							"    pm.response.to.be.json;\r",
							"    pm.response.to.have.body();\r",
							"    //var jsonBod = JSON.parse(responseBody);\r",
							"    var jsonBod = pm.response.json()\r",
							"});\r",
							"\r",
							"//4. Спарсить request\r",
							"pm.test(\"Request\", function () {\r",
							"    var req = pm.request.url.query.toObject();\r",
							"    });\r",
							"\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request)\r",
							"pm.test(\"Name s request\", function () {\r",
							"    var req = pm.request.url.query.toObject();\r",
							"    var jsonBod = pm.response.json();\r",
							"    pm.expect(req.name).to.eql(jsonBod.name);\r",
							"});\r",
							"\r",
							"//6. Проверить, что age в ответе равно age s request (age забрать из request)\r",
							"pm.test(\"Age s request\", function () {\r",
							"var req = pm.request.url.query.toObject();\r",
							"    var jsonBod = pm.response.json();\r",
							"    pm.expect(req.age).to.eql(jsonBod.age);\r",
							"});\r",
							"\r",
							"//7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"Salary s request\", function () {\r",
							"var req = pm.request.url.query.toObject();\r",
							"    var jsonBod = pm.response.json();\r",
							"    pm.expect(+req.salary).to.eql(jsonBod.salary);\r",
							"});\r",
							"\r",
							"//8. Вывести в консоль параметр family из response\r",
							"pm.test(\"family\", function () {\r",
							"    var parameter_family = pm.response.json();\r",
							"    console.log(parameter_family.family);\r",
							"});\r",
							"\r",
							"//9. Проверить, что у параметра dog есть параметры name\r",
							"pm.test(\"family_dog_name\", function () {\r",
							"    var parameter_family = pm.response.json();\r",
							"    pm.expect(parameter_family.family.pets.dog).hasOwnProperty(\"name\");\r",
							"});\r",
							"//.to.have.property\r",
							"\r",
							"//10. Проверить, что у параметра dog есть параметры age\r",
							"pm.test (\"family_dog_age\", function () {\r",
							"    var parameter_family = pm.response.json();\r",
							"    pm.expect(parameter_family.family.pets.dog).to.have.property(\"age\");\r",
							"});\r",
							"//.hasOwnProperty\r",
							"\r",
							"//11. Проверить, что параметр name имеет значение Luky\r",
							"pm.test (\"family_dog_Luky\", function () {\r",
							"    var parameter_family = pm.response.json();\r",
							"  pm.expect(parameter_family.family.pets.dog.name).to.include(\"Luky\");\r",
							"});\r",
							"//to.have.property\r",
							"//hasOwnProperty\r",
							"\r",
							"//12. Проверить, что параметр age имеет значение 4\r",
							"pm.test (\"family_dog_age\", function () {\r",
							"    var parameter_family = pm.response.json();\r",
							"  pm.expect(parameter_family.family.pets.dog.age).hasOwnProperty(4);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Marina&age=31&salary=1000000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Marina"
						},
						{
							"key": "age",
							"value": "31"
						},
						{
							"key": "salary",
							"value": "1000000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3. Спарсить response body в json\r",
							"pm.test(\"jsonBody, Responce is json\", function () {\r",
							"    pm.response.to.be.json;\r",
							"    pm.response.to.have.body();\r",
							"    //var jsonBod = JSON.parse(responseBody);\r",
							"    var jsonBod = pm.response.json()\r",
							"});\r",
							"\r",
							"//4. Спарсить request\r",
							"pm.test(\"Request\", function () {\r",
							"    var req = pm.request.url.query.toObject();\r",
							"    });\r",
							"\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request)\r",
							"pm.test(\"Name s request\", function () {\r",
							"    var req = pm.request.url.query.toObject();\r",
							"    var jsonBod = pm.response.json();\r",
							"    pm.expect(req.name).to.eql(jsonBod.name);\r",
							"});\r",
							"\r",
							"//6. Проверить, что age в ответе равно age из request (age забрать из request)\r",
							"pm.test(\"Age из request\", function () {\r",
							"var req = pm.request.url.query.toObject();\r",
							"    var jsonBod = pm.response.json();\r",
							"    pm.expect(+req.age).to.eql(jsonBod.age);\r",
							"});\r",
							"\r",
							"//7. Вывести в консоль параметр salary из request\r",
							"pm.test (\"salary_from_request\", function () {\r",
							"var parameter_salary = pm.request.url.query.toObject();\r",
							"console.log(parameter_salary.salary);\r",
							"}); \r",
							"\r",
							"//8. Вывести в консоль параметр salary из response\r",
							"pm.test (\"salary_from_responce\", function () {\r",
							"var parameter_salary = pm.response.json();\r",
							"console.log(parameter_salary.salary);\r",
							"}); \r",
							"\r",
							"//9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"pm.test (\"salary_from_responce\", function () {\r",
							"var parameter_salary = pm.response.json();\r",
							"console.log(parameter_salary.salary[0]);\r",
							"}); \r",
							"\r",
							"//10. Вывести в консоль 1-й элемент параметра salary параметр salary из response\r",
							"pm.test (\"salary_from_responce\", function () {\r",
							"var parameter_salary = pm.response.json();\r",
							"console.log(parameter_salary.salary[1]);\r",
							"}); \r",
							"\r",
							"//11. Вывести в консоль 2-й элемент параметра salary параметр salary из response\r",
							"pm.test (\"salary_from_responce\", function () {\r",
							"var parameter_salary = pm.response.json();\r",
							"console.log(parameter_salary.salary[2]);\r",
							"});\r",
							"\r",
							"//12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request)\r",
							"pm.test(\"=salary=\", function () {\r",
							"var req = pm.request.url.query.toObject();\r",
							"    var jsonBod = pm.response.json();\r",
							"    pm.expect(+req.salary).to.eql(jsonBod.salary[0]);\r",
							"});\r",
							"\r",
							"//13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"=salary*2=\", function () {\r",
							"var req = pm.request.url.query.toObject();\r",
							"    var jsonBod = pm.response.json();\r",
							"    pm.expect(req.salary*2).to.eql(+jsonBod.salary[1]);\r",
							"});\r",
							"\r",
							"//14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"pm.test(\"=salary*3=\", function () {\r",
							"var req = pm.request.url.query.toObject();\r",
							"    var jsonBod = pm.response.json();\r",
							"    pm.expect(req.salary*3).to.eql(+jsonBod.salary[2]);\r",
							"});\r",
							"\r",
							"//15. Создать в окружении переменную name\r",
							"pm.environment.set(\"name\", \"Marina\");\r",
							"\r",
							"//16. Создать в окружении переменную age\r",
							"pm.environment.set(\"age\", \"31\");\r",
							"\r",
							"//17. Создать в окружении переменную salary\r",
							"pm.environment.set(\"salary\", \"1000000\");\r",
							"\r",
							"//18. Передать в окружение переменную name\r",
							"var env_name = pm.environment.get (\"name\");\r",
							"console.log(env_name);\r",
							"\r",
							"//19. Передать в окружение переменную age\r",
							"var env_age = pm.environment.get(\"age\");\r",
							"console.log(env_age);\r",
							"\r",
							"//20. Передать в окружение переменную salary\r",
							"var env_salary = pm.environment.get(\"salary\");\r",
							"console.log(env_salary);\r",
							"\r",
							"//21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary\r",
							"//var salary_cycle = pm.response.json();\r",
							"//for (var i = 0, length = salary_cycle.salary.length; i < length; i++) {\r",
							"  //console.log(salary_cycle.salary[i]);\r",
							"//};\r",
							"\r",
							"var salary_cycle = pm.response.json();\r",
							"for (var i = 0, length = salary_cycle.salary.length; i < length; i++) {\r",
							"console.log(\"salary: \" + i + \" = \" + salary_cycle.salary[i]);\r",
							"};"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Marina&age=31&salary=1000000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Marina"
						},
						{
							"key": "age",
							"value": "31"
						},
						{
							"key": "salary",
							"value": "1000000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//5. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//6. Спарсить response body в json\r",
							"pm.test(\"jsonBody, Responce is json\", function () {\r",
							"        pm.response.to.be.json;\r",
							"        pm.response.to.have.body();              \r",
							"        var jsonBody = pm.response.json();\r",
							"});\r",
							"\r",
							"//7. Спарсить request\r",
							"pm.test(\"Request\", function () {\r",
							"    var req = request.data;\r",
							"});\r",
							"\r",
							"//8. Проверить, что json response имеет параметр start_qa_salary\r",
							"pm.test(\"Body contains start_salary\",function() {\r",
							"  pm.expect(pm.response.text()).to.include(\"start_qa_salary\");\r",
							"});\r",
							"\r",
							"//9. Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"pm.test(\"Body contains 6months_salary\",function() {\r",
							"  pm.expect(pm.response.text()).to.include(\"qa_salary_after_6_months\");\r",
							"});\r",
							"\r",
							"//10. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"pm.test(\"Body contains 12months_salary\",function() {\r",
							"  pm.expect(pm.response.text()).to.include(\"qa_salary_after_12_months\");\r",
							"});\r",
							"\r",
							"//11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"pm.test(\"Body contains 1.5year_salary\",function() {\r",
							"  pm.expect(pm.response.text()).to.include(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"\r",
							"//12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"pm.test(\"Body contains 3.5year_salary\",function() {\r",
							"  pm.expect(pm.response.text()).to.include(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"\r",
							"//13. Проверить, что json response имеет параметр person\r",
							"pm.test(\"Body contains person\",function() {\r",
							"  pm.expect(pm.response.text()).to.include(\"person\");\r",
							"});\r",
							"\r",
							"//14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"=start_salary=\", function () {\r",
							"    var req = request.data;\r",
							"    var jsonBody = pm.response.json();\r",
							"pm.expect(+req.salary).to.eql(jsonBody.start_qa_salary);\r",
							"});\r",
							"\r",
							"//15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request)\r",
							"pm.test(\"=6months_salary=\", function () {\r",
							"    var req = request.data;\r",
							"    var jsonBody = pm.response.json();\r",
							"pm.expect(+req.salary*2).to.eql(jsonBody.qa_salary_after_6_months);\r",
							"});\r",
							"\r",
							"//16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"pm.test(\"=12months_salary=\", function () {\r",
							"    var req = request.data;\r",
							"    var jsonBody = pm.response.json();\r",
							"pm.expect(+req.salary*2.7).to.eql(jsonBody.qa_salary_after_12_months);\r",
							"});\r",
							"\r",
							"//17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							"pm.test(\"=1.5year_salary=\", function () {\r",
							"    var req = request.data;\r",
							"    var jsonBody = pm.response.json();\r",
							"pm.expect(+req.salary*3.3).to.eql(jsonBody[\"qa_salary_after_1.5_year\"]);\r",
							"});\r",
							"\r",
							"//18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request)\r",
							"pm.test(\"=3.5years_salary=\", function () {\r",
							"    var req = request.data;\r",
							"    var jsonBody = pm.response.json();\r",
							"pm.expect(+req.salary*3.8).to.eql(jsonBody[\"qa_salary_after_3.5_years\"]);\r",
							"});\r",
							"\r",
							"//19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request)\r",
							"pm.test(\"u_name_1=1000000\", function () {\r",
							"    var req = request.data;\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(+req.salary).to.eql(jsonData.person.u_name[1]);\r",
							"});\r",
							"\r",
							"//20. Проверить, что что параметр u_age равен age из request (age забрать из request)\r",
							"pm.test(\"u_age=age\", function () {\r",
							"    var req = request.data;\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(+req.age).to.eql(jsonData.person.u_age);\r",
							"});\r",
							"\r",
							"//21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request)\r",
							"pm.test(\"5years_salary=salary*4.2\", function () {\r",
							"    var req = request.data;\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(+req.salary*4.2).to.eql(jsonData.person.u_salary_5_years);\r",
							"});\r",
							"\r",
							"//22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person\r",
							"var person_cycle = pm.response.json([]);\r",
							"for (var i = 0, length = person_cycle.salary.length; i < length; i++) {\r",
							"console.log(\"person: \" + i + \" = \" + person_cycle.person[i]);\r",
							"};\r",
							"//(var i = 0, length = salary_cycle.salary.length; i < length; i++) {\r",
							"//console.log(\"salary: \" + i + \" = \" + salary_cycle.salary[i]);\r",
							"//};\r",
							"//JSONArray dataArray= sync_reponse.getJSONArray(\"dataArray\");\r",
							"\r",
							"//for(int n = 0; n < dataArray.length(); n++)\r",
							"//{\r",
							"  //  JSONObject object = dataArray.getJSONObject(n);\r",
							"    // do some stuff....\r",
							"//}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}